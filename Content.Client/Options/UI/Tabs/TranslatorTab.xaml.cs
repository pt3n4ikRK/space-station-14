using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.IoC;
using Content.Shared.CCVar;
using Robust.Shared.Configuration;
using System;


namespace Content.Client.Options.UI.Tabs
{
    [GenerateTypedNameReferences]
    public sealed partial class TranslatorTab : Control
    {
        [Dependency] private readonly IConfigurationManager _cfg = default!;

        private CheckBox? _checkEnabledTranslator;
        private OptionButton? _selectLanguageButton; // Поміняв назву елементу, відповідно до XAML

        public TranslatorTab()
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);


            _checkEnabledTranslator!.Pressed = _cfg.GetCVar(CCVars.EnableTranslator);
            var selectedLanguage = _cfg.GetCVar(CCVars.TranslatorLanguage);
            _selectLanguageButton!.AddItem("English", 0);
            _selectLanguageButton!.AddItem("Ukrainian", 1);
            _selectLanguageButton!.SelectId(selectedLanguage == "UK" ? 1 : 0);

            _checkEnabledTranslator!.OnToggled += OnSettingsChanged;
            _selectLanguageButton!.OnItemSelected += OnSettingsChanged;
        }

        public bool IsTranslatorEnabled => _checkEnabledTranslator!.Pressed;
        public string SelectedLanguage => _selectLanguageButton!.SelectedId == 0 ? "EN" : "UK";

        public event Action? SettingsChanged;

        private void OnSettingsChanged(BaseButton.ButtonToggledEventArgs args)
        {
            SettingsChanged?.Invoke();
            SaveSettings();
        }

        private void OnSettingsChanged(OptionButton.ItemSelectedEventArgs args)
        {
            _selectLanguageButton!.SelectId(args.Id);
            SettingsChanged?.Invoke();
            SaveSettings();
        }

        private void SaveSettings()
        {
            _cfg.SetCVar(CCVars.EnableTranslator, IsTranslatorEnabled);
            _cfg.SaveToFile();
        }
    }
}
